generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int          @id @default(autoincrement())
  user_id         String       @unique @db.VarChar(20)
  name            String       @db.VarChar(20)
  password        String       @db.VarChar(20)
  created_at      DateTime     @default(now())
  updated_at      DateTime?    @updatedAt
  status          String       @default("active") @db.VarChar(10)
  inactivate_date DateTime?
  UserShorts      UserShorts[]
  UserStat        UserStat[]
  UserTimer       UserTimer[]
}

model UserShorts {
  id               Int                @id @default(autoincrement())
  user_id          Int
  user_count       Int
  watched_count    Int
  created_at       DateTime           @default(now())
  SelectedCategory SelectedCategory[]
  User             User               @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "UserShorts_user_id_fkey")
}

model SelectedCategory {
  id             Int        @id @default(autoincrement())
  user_shorts_id Int
  category_id    Int
  Category       Category   @relation(fields: [category_id], references: [id])
  UserShorts     UserShorts @relation(fields: [user_shorts_id], references: [id])

  @@index([category_id], map: "SelectedCategory_category_id_fkey")
  @@index([user_shorts_id], map: "SelectedCategory_user_shorts_id_fkey")
}

model Category {
  id               Int                @id @default(autoincrement())
  category_name    String             @db.VarChar(20)
  SelectedCategory SelectedCategory[]
}

model UserStat {
  id            BigInt  @id @default(autoincrement())
  user_id       Int?
  tier_id       Int?
  total_timer_h Int?
  total_timer_m Int?
  total_score   BigInt?
  total_count   BigInt?
  User          User?   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "UserStat_ibfk_1")

  @@index([user_id], map: "user_id")
}

model Tier {
  tier_id   Int    @id @default(autoincrement())
  tier_name String @db.VarChar(15)
}

model UserTimer {
  id            BigInt    @id @default(autoincrement())
  user_id       Int?
  status        String?   @default("ongoing") @db.VarChar(10)
  start_time    DateTime? @db.DateTime(6)
  end_time      DateTime? @db.DateTime(6)
  user_end_time DateTime? @db.DateTime(6)
  timer_h       Int?
  timer_m       Int?
  User          User?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "UserTimer_ibfk_1")

  @@index([user_id], map: "user_id")
}
