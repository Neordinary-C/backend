// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id         Int        @id @default(autoincrement())
  user_id    String     @unique @db.VarChar(20)
  name       String     @db.VarChar(20)
  password   String     @db.VarChar(20)
  created_at DateTime   @default(now())
  updated_at DateTime?   @updatedAt
  status     String     @default("active") @db.VarChar(10)
  inactivate_date DateTime?

  user_detox  UserDetox[]
  user_shorts UserShorts[]
  user_stat   UserStat[]
}

model UserDetox {
  id          Int      @id @default(autoincrement())
  user_id     String   @unique
  status      String   @db.VarChar(10) @default("none")
  start_time  DateTime
  end_time    DateTime
  user_end_time DateTime
  detox_time_h Int
  detox_time_m Int

  user        User     @relation(fields: [user_id], references: [user_id])
}

model UserShorts {
  id        Int    @id @default(autoincrement())
  user_id   String @db.VarChar(20)
  user_count Int
  watched_count Int

  user        User             @relation(fields: [user_id], references: [user_id])
  selected_category SelectedCategory[]
}

model SelectedCategory {
  id          Int        @id @default(autoincrement())
  user_shorts_id Int
  category_id Int

  user_shorts UserShorts @relation(fields: [user_shorts_id], references: [id])
  category    Category   @relation(fields: [category_id], references: [id])
}

model Category {
  id            Int                @id @default(autoincrement())
  category_name String             @db.VarChar(20)

  selected_category SelectedCategory[]
}

model UserStat {
  id          Int     @id @default(autoincrement())
  user_id     String  @unique
  tier_id     Int
  total_time_h Int
  total_time_m Int
  total_score BigInt
  total_count BigInt

  user        User    @relation(fields: [user_id], references: [user_id])
  tier        Tier    @relation(fields: [tier_id], references: [tier_id])
}

model Tier {
  tier_id  Int        @id @default(autoincrement())
  tier_name String    @db.VarChar(15)

  user_stat UserStat[]
}